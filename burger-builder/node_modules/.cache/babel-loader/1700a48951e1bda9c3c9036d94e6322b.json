{"ast":null,"code":"var _jsxFileName = \"/Users/skumar8/Documents/Code/Training/React/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from \"../../hoc/Aux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 1.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      finalise: false\n    };\n\n    this.finaliseHandler = () => {\n      this.setState({\n        finalise: true\n      });\n    };\n\n    this.finaliseCancelHandler = () => {\n      this.setState({\n        finalise: false\n      });\n    };\n\n    this.finaliseContinueHandler = () => {\n      alert(\"Order Registered\");\n    };\n\n    this.updatePurchasble = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const updatedPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: updatedPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasble(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount <= 0) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const updatedPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: updatedPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchasble(updatedIngredients);\n    };\n  }\n\n  render() {\n    const disabledInfo = { ...this.state.ingredients\n    };\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.finalise,\n      modalClosed: this.finaliseCancelHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      finaliseCancelHandler: this.finaliseCancelHandler,\n      finaliseContinueHandler: this.finaliseContinueHandler,\n      price: this.state.totalPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(BurgerControls, {\n      price: this.state.totalPrice,\n      addIngredient: this.addIngredientHandler,\n      removeIngredient: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      finalise: this.finaliseHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/skumar8/Documents/Code/Training/React/burger-builder/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BurgerControls","Aux","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","finalise","finaliseHandler","setState","finaliseCancelHandler","finaliseContinueHandler","alert","updatePurchasble","sum","Object","keys","map","igKey","reduce","el","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","updatedPrice","removeIngredientHandler","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BurgerControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from \"../../hoc/Aux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    salad : 0.5,\n    cheese : 0.4,\n    meat : 1.3,\n    bacon : 1.7\n};\n\nclass BurgerBuilder extends Component {\n    \n    state = {\n        ingredients : {\n            salad : 0,\n            bacon : 0,\n            cheese : 0,\n            meat : 0,\n        },\n        totalPrice : 4, \n        purchasable : false,\n        finalise : false\n    };\n\n    finaliseHandler = () => {\n        this.setState({finalise : true});\n    }\n\n    finaliseCancelHandler = () => {\n        this.setState({finalise : false});\n    }\n\n    finaliseContinueHandler = () => {\n        alert(\"Order Registered\");\n    }\n\n    updatePurchasble = (ingredients) => {\n\n        const sum = Object.keys(ingredients)\n                    .map((igKey)=>{\n                        return ingredients[igKey];\n                    })\n                    .reduce((sum, el) => {\n                        return sum + el;\n                    },0);\n        \n        this.setState({purchasable : sum > 0});\n    }\n\n    addIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const updatedPrice = oldPrice + priceAddition;\n\n        this.setState({\n            totalPrice:updatedPrice, \n            ingredients : updatedIngredients\n        });\n\n        this.updatePurchasble(updatedIngredients);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if(oldCount<=0)return;\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const updatedPrice = oldPrice - priceAddition;\n\n        this.setState({\n            totalPrice:updatedPrice, \n            ingredients : updatedIngredients\n        });\n\n        this.updatePurchasble(updatedIngredients);\n    }\n\n    render () {\n\n        const disabledInfo = {...this.state.ingredients};\n\n        for(let key in disabledInfo)\n        {\n            disabledInfo[key] = disabledInfo[key]<=0;          \n        }\n\n        return (\n            <Aux>\n                <Modal show = {this.state.finalise} modalClosed={this.finaliseCancelHandler}>\n                    <OrderSummary \n                    ingredients={this.state.ingredients}\n                    finaliseCancelHandler={this.finaliseCancelHandler}\n                    finaliseContinueHandler={this.finaliseContinueHandler}\n                    price={this.state.totalPrice}/>\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/>\n                <BurgerControls \n                price={this.state.totalPrice}\n                addIngredient = {this.addIngredientHandler}\n                removeIngredient = {this.removeIngredientHandler}\n                disabled = {disabledInfo}\n                purchasable = {this.state.purchasable}\n                finalise = {this.finaliseHandler}\n                />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;\n"]},"metadata":{},"sourceType":"module"}